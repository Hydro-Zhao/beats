type: log
paths:
{{ range $i, $path := .paths }}
 - {{$path}}
{{ end }}
exclude_files: [".gz$"]

harvester_buffer_size: 200000

multiline.pattern: '^<svg '
multiline.negate: true
multiline.match: after
multiline.flush_pattern: '^</svg>'

close_eof: true
clean_removed: true

processors:
- add_locale: ~
- script:
    lang: javascript
    id: gem_configImg
    params:
      m5outTime: "${M5OUT_MODIFICATION_TIME_FIELD}"
    source: >
      var m5outTime;
      function register(scriptParams) {
          m5outTime = scriptParams.m5outTime;
      }
      function process(event) {
          event.Delete("event.module");
          event.Delete("input.type");
          event.Delete("log.file");
          event.Delete("log.offset");
          event.Delete("log.flags");
          event.Delete("fileset.name");
          event.Delete("service.type");
          //ecs.version is added after beats event
          //event.Delete("ecs.version");
          //event.Delete("host.name");

          event.Put("gem5.timestamp", m5outTime);

          var svgString = event.Get("message");
          if (svgString.slice(0,4) == "<svg") {
              //var svgBase64 = btoa(svgString);
              //event.Put("gem5.configImg", svgBase64);
              event.Put("gem5.configImg", svgString);
          }

          event.Delete("message");
      }
#- decode_base64_field:
#    field:
#      from: "message"
#      to: "gem5.decode_base64_field"

# I do not know why the other lines out of svg tag are also involved
- drop_event:
    when:
      not:
        has_fields: ["gem5.configImg"]

