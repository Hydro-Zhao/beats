// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gem

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "gem", asset.ModuleFieldsPri, AssetGem); err != nil {
		panic(err)
	}
}

// AssetGem returns asset data.
// This is the base64 encoded gzipped contents of module/gem.
func AssetGem() string {
	return "eJzE3duP2zb2B/D3/BVG32uk/f3S3fXDAnNJ0AFmcrHTnUeBpo49hCVSJil7nL9+IVm+SKKnNc9X3Ydimkn0MUXxpqND+efRinaT0ZLyd6ORVz6jyeinJeUffno3GqXkpFWFV0ZPRv9+NxqNqn84ejJpmdG70WihKEvdpP6Ln0da5FRLH+pfjEZ+V1S/sKYsmt8EwLZyLhWqoI2i7fEvQmIIOEekyYuMPLX+8gBlRi+DR6UkTXrtMcoJlyfCOcrn2S548Ip2W2PTt45X2nlbyqqKYohCePlyXcFJp4lXcnXdUQu6+oOUc+WVlVrIpCzk1RVhqfp53Uc5Wie6zK88yAvrI2rPeWOvLJ+YC50aTWndRN5oIXNjMhK615+cF96xOtNCaZFFnO2Lcb4udWLFtV2xPjanPCmdWMYca4rYT3UkjU5dxJFVFUV8qlN5srC0vv6oqnKvLGh1mCkiDoqqlurAqlauPWznPOVjma2S1ORC6bHMzNWdrUGKcjy3QsuXr5bS8e332ztjLUkP0n5X/isSi6yqHvVozKq8+kIHtenN7EEDa61qSA9aYsHqf5T0lCJApVNVFQ51PQ4e8KIcyCflHEHEDFe40lE6vZkBqLPTLNhXWMrE0nKhMkosiasHsyC0tcoz6l+aPFd+LHLDNvaVdqooEMg/ufk2yVSe0IY0v1D7H5+NnhUkZ15kGYicrUvhXih9iJhUL5AerX1hdM+ulRRkE7mTGU0m74Oqp1fPUX8ZRP11EPX/BlH/fxD1wyDqb4Oo/xhE/ecgai5ek43Irr1b/av6+d0ZFFZ6wGKbDdlFZrbhgYdb5U7kRcafYcK2T2kziOyNF9kgcqlTUHUviqjbw75T6jrokEjEVKu0xxQrM6z12x7JKZ8Ly2ZMkchMOJe8n0w+ZUb4mzS8Rr3i8vXMu7zAm5vw7RfHvFfhPscxnyifksDX6RPlz9XyHQ8rFw5fstAyw1+uCr2R+MLO1hZa2God/dXS5fhztOtvshIsgvvAg4Zf+4fC3khJjj3NnKMDdNMheuhnk3wp7qo/IdWZylPwuN+Q4O5ZqxeWXDzySb3CVWzfrEjwRFqT2Hm0IsFDSEUOsTQ5ufgLNcSy5+TiL9kQy5+ji15RnGDwzNKCBxi6antKaSlpqLa814dqeeiVUQUP0TqGaBgDtYmvloaYKQZrZQ08VIkHaLmzF/HL78JBl97nLjuoG4B//fDbQEVu5CEKPVPLXAwGs6PcfVgt4KNEjQ4wTKBHXkgY0NKCHYBy2yKRptTxD9MbaEMSEp4DPfjiPvEqFOfYhHd999mE49vMyBWldzvJiXM32H39g1m3jfWQZoQp1bTUGGj/CBZj/aHnVc1zMT8f23QfKmEzzFSNCtlaSFm2llmWOg43vuUmCOyZOyFf6FFpPsS72HvkQVbFabIB2Birp+6NanFfJzpATu8r6VTp5bdSkZMEd79bUeBQyICwp/bJLNPrszO7kNq3D9g5HtOaQL0pIgE1RNwr5zmJIV0pPhmkK8WvjrtS/HK4K8UnenSl+OSOrhSf0NGV4pM4ulJ84kZX4idr9EROgkYPYydldEV+IkZX5CZf9DxWwkVX462+uxogsWJRgLJHFX/lrWgLzPesNHolmbAzPo+SNuEY1FUIayo7KZw77KNS791BOFtexSja3gJubBrqXrni0QjmHeUZ1iTmwjxMVu45WF1HmCa8RBXu4ytJ2KWoMGjVVWDJDus02MO3T2WWfeTlgx8szGCqaPs4AxYLcufSWJhQRoVlbj32L9Xs9X483wemHlmJdF20vjdqQl4wdGHsFltMtdTGUjolVxjNiYP0YL25SVMLLu0enW0L5kR2juaUf7Ep2f8ok4mLu0pjZEuuGhTLDN24XDOgDaPO+BN8r04BY8kxPPDZ+O9iRZq/c67FAs3tPJFGuzInRk7tEeI8zmiQhdCmZCuFNWkpAefEXs5u54kjTrVoj7qFOZOYO+DUhZ3+f/FY5lMatR5/+iOp/j0kezvAcZ7GhzhG4lKA4+QrBThuCmiY5KWAhkxOvkzI4+TKXPA4D8ADJOvhd9uD5GJ3SVYGYQ/DNWtu8nVHY+ddtz1sfwN3NUCidRvk5lgHNVw/42ZWBzVOUnUAhHUybip1QIPNbNwE6r4GXhhA0qYvkNiLAl5zQPKkL5DASR2THf2GiR10QDnRb8IDNCvgkoSdBB3gsJcef9W5Wc99cYgmxM91vmRiWyQ7w/kyGZ+wEDS5ec1voeCiMrOZL5vxmRshk5PDfMHDdnXgSMkOlyyKRGRlIrh5iHuqfj/guqSSHZHqcluxorIYoJzceNd6vCiTeel2ieTE8k4ML65YO4syyzDhrzbGHKM7GG8Z2saYC9A2BrgN74HsO/GOyFwddTTm4qivMQfMNsgdL48aKtR1BnLv+c4pVCMGBLlOFiLEddSQPQvaqTDBrSMHCG11LVSPAoS1uhYzqNXmQN0JENBqW6DZChDMalnQSR4VyOqDyEsBXT2gQlh9EDZFw8JXYRE5sOBCV5dYeEOCLS4QQas2hrzc6CsNCFe1PHyjgYSqAiKyBSLCVEGQFaXpioAQ1QUSWkx+eCoosoJTHZEZmupryC7NHQmV9rBY0uHNkqhgUscDRpO6MjucpNZ1VvZNmnKSbo/Og3MlFzrfBgAoVyuV/eOryJWGkohTPoDNqU8pNxuU+aUgK3SKOfX6XDFv/w5y8Ts9gxxrfO5zrMG5z8Vv/Axy8bs/g1z8FtAgF78PNMjFbwYNcvwdoWGWsy00LLL3hgZZ/gbRIMvdJRpGWVtFgyT7wVafBGwaVWvehny1rl/Kg1olHV7wg1oldTzgKqkrM1dJmPe4KMR7XBTmPS4K8R6XnPJ7Kt6PpdGLTEmv9JK3uyYAMjfWHESlHVnP3f3T1biFUw71nUItitncdZkzdwvqMn82dvXgKXd3zbdpxi87z7WZF5Zj7b/lcYzYBN1Qd4eXjT0JxtvGGgyyt/Vg8fe2NtL0yy2uWNP6B/e7zFoYc19x2zrcLbE59nvNGgiysfhgITYWNxZmY/ERS40mRBeqX7RR/V/C/Uq6BtzvVkOKjqwSmfoBeQ9Ux1R6CekNbqUw3cpTXsxghTPz6j/mZHlQmPOkVzm5apSNn462xq4yI9JqjpvtHOtbcpKNybxY0uFbT5s/RnE55Yn0NnNjsVl+tcpY5XdJXeRUeMG7r3sDr9bsg+D1pZ4LuXJAfpp+e6S42/uW82wBznzbfF0yiXQyOdYmVI2/S26JZ0WsWhMUxJwz9HRrBnq+5yLmhBsRcsY7T26QttiFcaUFt8iuCTt53HnnZJeUPtvb0sZOyCdMk/IvZKck0s/G1mlyU1qz1bLO3qu576XVN9aUsQvzljrzYlfJMx8bXOtxdSFBXlN/IoWe9H7NhGvkXRLQxs9IRBMvyN4KvZqm+zZ+6VEVAww/rOKA+CLiyxh+psYRw4/VOGL4yRpHDD9cY4jwaoTXIrwS4XUYfkTJAMMPKRlg+DElA/wXBjzM/LBR8QSCRpwzEF9EfBlB3flMBPXnMxHUoc9EUI8+ifBqhNcivBLhdQgaFU8gaFQ8gaBR8QSyR8UmUvQkXh+FJy13KFBpELi19f3FlJxKK++7qqNZf3y+//jp4fPHe6ZfLbwhN4MVBLj7c2Q3SlJ6u3u235hWHf2DnNyWe287L924WPn9KwqZ9zktKzkLK6f1m1TrYleNZTLptyZzIfkW+rHDnJ3635xd72MhZ+fUDyT197eCP/3UQc7t72kDf/qp/HMbalSvcEvrR7Ej++vYSFkWgjEJtbnSq0z9iH/x7xF0RS3+girg0UOXEFaFRw9UQqeNKb5bsViouDehnjvNO29jk7qDVFxCd5CKS+YOUnGJ3EEqLok7SPGSkMNkbAJyWGMlHwdJXuJxkGQ+4A2A0QnHQY49a7Q5ZqJx21SZJzt+UT7Jy8yrxNK6JMa6+Q26/jUWdkov61zKAQrd2OBSe+Pxxa1QUDlZgrdCuyStv0NpSiK9y0joKa2R5sfXAUAX9zU7F0S0N3sR9fdPwE77+ZAdU1+gKPXa5KP/BgAA//9QGyO0"
}
