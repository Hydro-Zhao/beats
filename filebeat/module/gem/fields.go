// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package gem

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("filebeat", "gem", asset.ModuleFieldsPri, AssetGem); err != nil {
		panic(err)
	}
}

// AssetGem returns asset data.
// This is the base64 encoded gzipped contents of module/gem.
func AssetGem() string {
	return "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"
}
